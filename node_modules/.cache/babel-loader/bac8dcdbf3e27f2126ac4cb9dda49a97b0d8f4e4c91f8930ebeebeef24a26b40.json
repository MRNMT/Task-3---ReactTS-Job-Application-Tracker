{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trainning Room\\\\Downloads\\\\Goodwill\\\\Task-3---ReactTS-Job-Application-Tracker\\\\src\\\\components\\\\LoadingSpinner.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = ({\n  size = 'md',\n  color = 'black',\n  text,\n  fullScreen = false\n}) => {\n  const getSizeClasses = () => {\n    switch (size) {\n      case 'sm':\n        return 'w-4 h-4';\n      case 'md':\n        return 'w-8 h-8';\n      case 'lg':\n        return 'w-12 h-12';\n      default:\n        return 'w-8 h-8';\n    }\n  };\n  const getColorClasses = () => {\n    switch (color) {\n      case 'black':\n        return 'text-black dark:text-white';\n      case 'white':\n        return 'text-white';\n      case 'gray':\n        return 'text-gray-500';\n      default:\n        return 'text-black dark:text-white';\n    }\n  };\n  const spinnerContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${getSizeClasses()} ${getColorClasses()} animate-spin rounded-full border-2 border-current border-t-transparent`,\n      style: {\n        animation: 'spin 1s linear infinite'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), text && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `mt-2 text-sm ${getColorClasses()}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n  if (fullScreen) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: spinnerContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n  return spinnerContent;\n};\n_c = LoadingSpinner;\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoadingSpinner","size","color","text","fullScreen","getSizeClasses","getColorClasses","spinnerContent","className","children","style","animation","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Trainning Room/Downloads/Goodwill/Task-3---ReactTS-Job-Application-Tracker/src/components/LoadingSpinner.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface LoadingSpinnerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n  color?: 'black' | 'white' | 'gray';\r\n  text?: string;\r\n  fullScreen?: boolean;\r\n}\r\n\r\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\r\n  size = 'md',\r\n  color = 'black',\r\n  text,\r\n  fullScreen = false\r\n}) => {\r\n  const getSizeClasses = () => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return 'w-4 h-4';\r\n      case 'md':\r\n        return 'w-8 h-8';\r\n      case 'lg':\r\n        return 'w-12 h-12';\r\n      default:\r\n        return 'w-8 h-8';\r\n    }\r\n  };\r\n\r\n  const getColorClasses = () => {\r\n    switch (color) {\r\n      case 'black':\r\n        return 'text-black dark:text-white';\r\n      case 'white':\r\n        return 'text-white';\r\n      case 'gray':\r\n        return 'text-gray-500';\r\n      default:\r\n        return 'text-black dark:text-white';\r\n    }\r\n  };\r\n\r\n  const spinnerContent = (\r\n    <div className=\"flex flex-col items-center justify-center\">\r\n      <div\r\n        className={`${getSizeClasses()} ${getColorClasses()} animate-spin rounded-full border-2 border-current border-t-transparent`}\r\n        style={{\r\n          animation: 'spin 1s linear infinite'\r\n        }}\r\n      />\r\n      {text && (\r\n        <p className={`mt-2 text-sm ${getColorClasses()}`}>\r\n          {text}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  if (fullScreen) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        {spinnerContent}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return spinnerContent;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1B,MAAMC,cAA6C,GAAGA,CAAC;EACrDC,IAAI,GAAG,IAAI;EACXC,KAAK,GAAG,OAAO;EACfC,IAAI;EACJC,UAAU,GAAG;AACf,CAAC,KAAK;EACJ,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,QAAQJ,IAAI;MACV,KAAK,IAAI;QACP,OAAO,SAAS;MAClB,KAAK,IAAI;QACP,OAAO,SAAS;MAClB,KAAK,IAAI;QACP,OAAO,WAAW;MACpB;QACE,OAAO,SAAS;IACpB;EACF,CAAC;EAED,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5B,QAAQJ,KAAK;MACX,KAAK,OAAO;QACV,OAAO,4BAA4B;MACrC,KAAK,OAAO;QACV,OAAO,YAAY;MACrB,KAAK,MAAM;QACT,OAAO,eAAe;MACxB;QACE,OAAO,4BAA4B;IACvC;EACF,CAAC;EAED,MAAMK,cAAc,gBAClBR,OAAA;IAAKS,SAAS,EAAC,2CAA2C;IAAAC,QAAA,gBACxDV,OAAA;MACES,SAAS,EAAE,GAAGH,cAAc,CAAC,CAAC,IAAIC,eAAe,CAAC,CAAC,yEAA0E;MAC7HI,KAAK,EAAE;QACLC,SAAS,EAAE;MACb;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACDZ,IAAI,iBACHJ,OAAA;MAAGS,SAAS,EAAE,gBAAgBF,eAAe,CAAC,CAAC,EAAG;MAAAG,QAAA,EAC/CN;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CACN;EAED,IAAIX,UAAU,EAAE;IACd,oBACEL,OAAA;MAAKS,SAAS,EAAC,4EAA4E;MAAAC,QAAA,EACxFF;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAEV;EAEA,OAAOR,cAAc;AACvB,CAAC;AAACS,EAAA,GAzDIhB,cAA6C;AA2DnD,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}